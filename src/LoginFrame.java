
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Formatter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Eduardo
 */
public class LoginFrame extends javax.swing.JFrame {

    String usuario;
    int novaPont, resp;

    public LoginFrame() {
        initComponents();
        this.setDefaultCloseOperation(HIDE_ON_CLOSE);
        setResizable(false);
        novaPont = -1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        campoUsuario = new javax.swing.JTextField();
        campoSenha = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        botaoOk = new javax.swing.JButton();
        botaoCancelar = new javax.swing.JButton();
        criarNovo = new javax.swing.JCheckBox();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GAME_HAZARD_LOGO.png"))); // NOI18N

        jLabel2.setText("Usuário:");

        campoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoUsuarioActionPerformed(evt);
            }
        });

        campoSenha.setText("jPasswordField1");
        campoSenha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                campoSenhaMouseClicked(evt);
            }
        });

        jLabel3.setText("Senha:");

        botaoOk.setText("     Ok    ");
        botaoOk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoOkMouseClicked(evt);
            }
        });
        botaoOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoOkActionPerformed(evt);
            }
        });

        botaoCancelar.setText("Cancelar");
        botaoCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botaoCancelarMouseClicked(evt);
            }
        });
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });

        criarNovo.setText("Criar Novo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoUsuario)
                            .addComponent(campoSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botaoCancelar)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(botaoOk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(criarNovo)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botaoOk, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(campoSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botaoCancelar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(criarNovo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void campoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoUsuarioActionPerformed

    private void campoSenhaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campoSenhaMouseClicked
        campoSenha.setText(null);
    }//GEN-LAST:event_campoSenhaMouseClicked

    private void botaoOkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoOkMouseClicked
        usuario = campoUsuario.getText();
        char[] senhaQuebrada = campoSenha.getPassword();
        String senha = "";
        for (int i = 0; i < senhaQuebrada.length; i++) {
            senha = senha + senhaQuebrada[i];
        }
        if (!usuario.isEmpty()) {
            if (criarNovo.isSelected()) {
                criarNovoUsuario(usuario, senha);
            } else {
                logarUsuario(usuario, senha);
            }
        }
    }//GEN-LAST:event_botaoOkMouseClicked

    private void botaoCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoCancelarMouseClicked
        setVisible(false);
    }//GEN-LAST:event_botaoCancelarMouseClicked

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden

    }//GEN-LAST:event_formComponentHidden

    private void botaoOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoOkActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_botaoOkActionPerformed

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        setVisible(false);
    }//GEN-LAST:event_botaoCancelarActionPerformed
    private void logarUsuario(String usuario, String senha) {
        String senhaAtual, usuarioAtual;
        String senhaTeste = "";
        int pontuacaoUsuario = 0;
        boolean naoApareceu = true;
        File dados = new File("data");
        try {
            Scanner reader = new Scanner(dados);
            while ((reader.hasNextLine()) && (naoApareceu)) {
                pontuacaoUsuario = Integer.parseInt(reader.next());
                System.out.println(pontuacaoUsuario);
                usuarioAtual = reader.next();
                System.out.println(usuarioAtual);
                senhaAtual = reader.next();
                System.out.println(senhaAtual);
                if (usuario.equals(usuarioAtual)) {
                    naoApareceu = false;
                    senhaTeste = senhaAtual;
                }
            }
            if (naoApareceu) {
                int resp = JOptionPane.showConfirmDialog(null, "Usuário não encontrado, desejar criar um novo?");
                if (resp == JOptionPane.YES_OPTION) {
                    criarNovoUsuario(usuario, senha);
                }
            } else {
                if (senha.equals(senhaTeste)) {
                    resp = JOptionPane.showConfirmDialog(null, "Sua atual pontuação é " + pontuacaoUsuario + ", deseja salvar sua nova pontuação(" + novaPont + ")?");
                    if (resp == JOptionPane.OK_OPTION) {
                        salvarPontuacao(usuario, novaPont, senhaTeste);
                    }
                    this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Senha Incorreta!");
                }
            }
            dados.setWritable(false);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void criarNovoUsuario(String usuario, String senha) {
        File dados = new File("data");
        File temp = new File("temp");
        try {
            Scanner leitor = new Scanner(dados);
            Formatter escritor = new Formatter(temp);
            while (leitor.hasNextLine()) {
                escritor.format("%s\n", leitor.nextLine());
            }
            escritor.format("%s\n", "0 " + usuario + " " + senha);
            leitor.close();
            escritor.close();
            dados.setWritable(true);
            leitor = new Scanner(temp);
            escritor = new Formatter(dados);
            while (leitor.hasNextLine()) {
                escritor.format("%s\n", leitor.nextLine());
            }
            dados.setReadOnly();
            leitor.close();
            escritor.close();
            logarUsuario(usuario, senha);
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Erro ao tentar ler um arquivo");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);

            }
        });
    }

    public String getUser() {
        return usuario;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoOk;
    private javax.swing.JPasswordField campoSenha;
    private javax.swing.JTextField campoUsuario;
    private javax.swing.JCheckBox criarNovo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables

    void setNovaPont(int pontuacao) {
        novaPont = pontuacao;
    }

    private void salvarPontuacao(String usuario, int pontuacao, String senha) {
        File dados = new File("data");
        File temp = new File("temp");
        try {
            Scanner leitor = new Scanner(dados);
            Formatter escritor = new Formatter(temp);
            int pontuacaoAtual = 0;
            boolean naoEntrou = true;
            String usuarioAtual = "";
            String[] infUsuarios;
            while (leitor.hasNextLine()) {
                infUsuarios = leitor.nextLine().split(" ", 3);
                System.out.println(infUsuarios[0]);
                if (!infUsuarios[1].equals(usuario)) {
                    if (pontuacao < Integer.parseInt(infUsuarios[0])) {
                        escritor.format("%s\n", infUsuarios[0] + " " + infUsuarios[1] + " " + infUsuarios[2]);
                    } else {
                        escritor.format("%s\n", pontuacao + " " + usuario + " " + senha);
                        escritor.format("%s\n", infUsuarios[0] + " " + infUsuarios[1] + " " + infUsuarios[2]);
                        naoEntrou = false;
                    }
                }
            }
            if (naoEntrou) {
                escritor.format("%s\n", pontuacao + " " + usuario + " " + senha);
            }
            escritor.close();
            leitor.close();
            dados.setWritable(true);
            temp.deleteOnExit();
            Formatter dataWriter = new Formatter(dados);
            Scanner tempReader = new Scanner(temp);
            while (tempReader.hasNextLine()) {
                dataWriter.format("%s\n", tempReader.nextLine());
            }
            dataWriter.close();
            dados.setWritable(false);
            tempReader.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao tentar ler algum arquivo!");
        }
        int resp = JOptionPane.showConfirmDialog(null, "Pontuação salva com sucesso! Deseja ver o Ranking?");
        if (resp == JOptionPane.NO_OPTION) {
            Game.window.exit();
        } else if (resp == JOptionPane.YES_OPTION) {
            TelaRanking rankin = new TelaRanking();
        }
    }
}
